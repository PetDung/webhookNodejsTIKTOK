

export async function getShop(shopId) {
    const url = `https://api.roninteam.store/webhook/details/${shopId}`;

    try {
        const response = await fetch(url, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        const data = await response.json();
        return data;
    } catch (error) {
        console.error('L·ªói khi th·ª±c hi·ªán y√™u c·∫ßu:', error);
    }

}


//Telegram bot
export async function sendMessageToGroup(token, chatId, message) {
    const url = `https://api.telegram.org/bot${token}/sendMessage`;

    const payload = {
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML' // T√πy ch·ªçn: 'HTML' ho·∫∑c 'Markdown' ƒë·ªÉ ƒë·ªãnh d·∫°ng vƒÉn b·∫£n
    };

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        });

        const data = await response.json();

        if (data.ok) {
            console.log('‚úÖ Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!');
            // console.log(data); // In ra to√†n b·ªô ph·∫£n h·ªìi n·∫øu c·∫ßn
        } else {
            console.error('‚ùå G·ª≠i tin nh·∫Øn th·∫•t b·∫°i:', data.description);
        }
    } catch (error) {
        console.error('L·ªói khi th·ª±c hi·ªán y√™u c·∫ßu:', error);
    }
}

export async function sendNotication(message, type) {

    const token = "7984445379:AAFU3b9w__TG1IG99FAyHR7BqiyGfmVGE7k";
    const chatId = "-1003152164716";

    const shop = await getShop(message.shopId);
    const shopName = shop.result.userShopName;

    switch (type) {
        case 'PRODUCT':
            let productId = message.productId;
            let errorMessage = message.suspended_reason;

            var textMessage = `üõí <b>S·∫£n ph·∫©m l·ªói t·∫°i ${shopName}!</b>\n\n` +
                  `‚ùóÔ∏è <b>L√Ω do:</b> ${errorMessage}\n` +
                  `üì¶ <b>M√£ s·∫£n ph·∫©m:</b> <code>${productId}</code>\n` +
                  `üëâ Vui l√≤ng ki·ªÉm tra v√† x·ª≠ l√Ω ngay!\n`
            await sendMessageToGroup(token, chatId, textMessage);
            break;   
        default:
            break;
    }    

}